#!/bin/bash
# shellcheck disable=1090

function dot-reset() {
  source "${HOME}/.bashrc"
}

function sd() {
  declare -A dir_list
  while IFS="=" read -r key value; do
    dir_list[$key]=$value
  done < "${HOME}/.dot_dirs"
  if [ "$#" -eq 0 ]; then
    cat "${HOME}/.dot_dirs"
  elif [ "$#" -eq 1 ]; then
    if [[ -v dir_list[$1] ]]; then
      cd "${dir_list[$1]}" || exit
    fi
  else
    if [ -z "$2" ]; then
      unset "dir_list[$1]"
    else
      dir_list[$1]=$2
    fi
    for key in "${!dir_list[@]}"; do
      echo "${key}=${dir_list[$key]}"
    done > "${HOME}/.dot_dirs"
  fi
}

function apt-update() {
  sudo apt update
}

function apt-update() {
  if sudo apt update && sudo apt full-upgrade -y && sudo apt autoremove -y; then
    if [ -f /var/run/reboot-required ]; then
      echo -e "\e[33m*** Reboot Required ***\e[0m"
    else
      echo -e "\e[34m*** System Updated ***\e[0m"
    fi
  else
    echo -e "\e[31m*** System Update Failed ***\e[0m"
  fi
}

function home() {
  cd "${HOME}" || exit
  user="$USER @ $(hostname)"
  hr="------------------------------------------"
  public_ip=$(curl -s ipinfo.io/ip)
  ip=$(hostname -I)
  os=$(lsb_release -s -d)
  clear
  echo ""
  echo "$user"
  echo "${hr::${#user}}"
  echo "  date:  $(date +"%Y-%m-%d %T")"
  echo "kernel:  $(uname -r) $(uname -m)"
  echo "    os:  ${os}"
  echo " local:  ${ip%% *}"
  echo "public:  ${public_ip}"
  echo ""
}

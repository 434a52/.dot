#!/bin/bash
# shellcheck disable=1090

function dot_reload() {
  (cd "${DOT}" && git pull --ff-only)
  dot_reset
}

function dot_reset() {
  source "${HOME}/.bashrc"
}

function sd() {
  declare -A dir_list
  while IFS="=" read -r key value; do
    dir_list[$key]=$value
  done < "${HOME}/.dot_dirs"

  if [ "$#" -eq 0 ]; then
    cat "${HOME}/.dot_dirs"
  elif [ "$#" -eq 1 ]; then
    if [[ -v dir_list[$1] ]]; then
      cd "${dir_list[$1]}"
    fi
  else
    if [ -z "$2" ]; then
      unset "dir_list[$1]"
    else
      dir_list[$1]=$2
    fi
    if [ -n "${BASH}" ]; then
      for key in "${!dir_list[@]}"; do
        echo "${key}=${dir_list[$key]}"
      done > "${HOME}/.dot_dirs"
    # elif [ -n "${ZSH}" ]; then
    #   for key value in ${(kv)dir_list}; do
    #     echo "${key}=${value}"
    #   done > "${HOME}/.dot_dirs"
    fi
  fi
}

function cdl() {
  cd "${1}" && ll "${PWD}"
}

function mkcd() {
  mkdir -p -- "$1" && cd -P -- "$1" || exit
}

function clone_all() {
  repo_list="${HOME}/code/repo-list"
  while read -r repo; do
    echo "${repo}"
  done < "${repo_list}"
}

function pull_all() {
  for repo in */.git; do
    echo "${repo}"
    (cd "${repo}/.." && git pull --ff-only)
  done
}

function apt_update() {
  if sudo apt update && sudo apt full-upgrade -y && sudo apt autoremove -y; then
    if [ -f /var/run/reboot-required ]; then
      echo -e "\e[33m*** Reboot Required ***\e[0m"
    else
      echo -e "\e[34m*** System Updated ***\e[0m"
    fi
  else
    echo -e "\e[31m*** System Update Failed ***\e[0m"
  fi
}

function set_title() {
  if [ -z "$PS1_BACK" ]; then
    PS1_BACK="$PS1"
  fi
  TITLE="\[\e]0;$*\a\]"
  PS1="${PS1_BACK}${TITLE}"
}

function git_branch() {
  git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/[\1] /'
}
